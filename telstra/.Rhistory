source('~/admin/freelance/kaggle/telstra/telstra.R')
View(train)
source('~/admin/freelance/kaggle/telstra/telstra.R')
source('~/admin/freelance/kaggle/telstra/telstra.R')
View(test)
View(train)
View(severity_type)
View(severity_type)
View(sample_submission)
View(train)
View(severity_type)
View(severity_type)
View(train)
View(severity_type)
View(resource_type)
View(log_feature)
View(log_feature)
View(event_type)
View(event_type)
rbind?
?rbind
?rbind
df <- merge(train, severity_type, by="id")
df
View(df)
df <- merge(train, severity_type, resource_type, event_type, log_feature, by="id")
MyMerge <- function(x, y){
df <- merge(x, y, by= "id", all.x= TRUE, all.y= TRUE)
return(df)
}
df <- Reduce(MyMerge, list(train, severity_type, resource_type, event_type, log_feature))
View(df)
str(df)
df <- merge(train, severity_type, by="id")
# merge data to 1 dataframe
MyMerge <- function(x, y){
df <- merge(x, y, by= "id")
return(df)
}
df <- Reduce(MyMerge, list(train, severity_type, resource_type, event_type, log_feature))
# merge data to 1 dataframe
MyMerge <- function(x, y){
df <- merge(x, y, by= "id")
return(df)
}
df <- Reduce(MyMerge, list(train, severity_type, resource_type, event_type, log_feature))
all_df <- list(train, severity_type, resource_type, event_type, log_feature)
dat <- all_df[[1]]
for(i in 2:length(all_df)) {
dat <- merge(dat, all_df[[i]], by="id")
}
View(train)
View(train)
View(event_type)
source('~/admin/freelance/kaggle/telstra/telstra.R')
View(train)
str(train)
View(severity_type)
severity_type$id
length(severity_type$id)
length(unique(severity_type$id))
length(unique(train$id))
length(unique(test$id))
merge(train, severity_type, by="id")
length(merge(train, severity_type, by="id"))
dat2 <- merge(train, severity_type, by="id")
View(dat2)
dat2 <- merge(dat2, resource_type, by="id")
sev <- severity_type[severity_type$id %in% train$id,]
sev
View(event_type)
View(log_feature)
source('~/admin/freelance/kaggle/telstra/telstra.R')
View(resource_type_train)
resource_type_train
resource_type_train$id
length(resource_type_train$id)
length(unique(resource_type_train$id))
?aggregate
aggregate(resource_type_train, by=resource_type_train$id)
aggregate(resource_type_train, by=resource_type_train$id)
dat = data.frame(title = c("title1", "title2", "title3"),
author = c("author1", "author2", "author3"),
customerID = c(1, 2, 1))
dat
dat[-3]
aggregate(dat[-3], by=list(dat$customerID), c)
aggregate(resource_type_train[-2], by=list(resource_type_train$id), c)
df2 <- aggregate(resource_type_train[-2], by=list(resource_type_train$id), c)
View(df2)
resource_type_train[-2]
head(resource_type_train[-2])
head(resource_type_train)
head(resource_type_train[-1])
df2 <- aggregate(resource_type_train[-1], by=list(resource_type_train$id), c)
View(df2)
df2[df2$Group.1=17041,]
df2[df2$"Group.1"=17041,]
df2[df2$"Group.1"==17041,]
read.csv?
?read.csv
?read.csv
resource_type <- read.csv("resource_type.csv", stringsAsFactors=False)
resource_type <- read.csv("resource_type.csv", stringsAsFactors=FALSE)
View(resource_type)
resource_type <- read.csv("resource_type.csv", stringsAsFactors=FALSE)
resource_type_train <- resource_type[resource_type$id %in% train$id,]
View(resource_type_train)
head(resource_type_train)
merge(resource_type_train)
aggregate(resource_type_train,by= "id" )
?aggregate
dat = data.frame(title = c("title1", "title2", "title3"),
author = c("author1", "author2", "author3"),
customerID = c(1, 2, 1))
dat
dat = data.frame(title = c("title1", "title2", "title3"),
author = c("author1", "author2", "author3"),
customerID = c(1, 2, 1), stringsAsFactors=FALSE)
dat
aggregate(resource_type_train,by= "id",c)
aggregate(resource_type_train,by=list(resource_type_train$id),c)
df2 <- aggregate(resource_type_train,by=list(resource_type_train$id),c)
View(df2)
df2 <- aggregate(resource_type_train[-1],by=list(resource_type_train$id),c)
View(df2)
resource_type <- read.csv("resource_type.csv", stringsAsFactors=FALSE)
resource_type_train <- resource_type[resource_type$id %in% train$id,]
resource_type_train <- aggregate(resource_type_train[-1],by=list(resource_type_train$id),c)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
severity_type <- read.csv("severity_type.csv")
severity_type_train <- severity_type[severity_type$id %in% train$id,]
resource_type <- read.csv("resource_type.csv", stringsAsFactors=FALSE)
resource_type_train <- resource_type[resource_type$id %in% train$id,]
resource_type_train <- aggregate(resource_type_train[-1],by=list(resource_type_train$id),c)
event_type <- read.csv("event_type.csv", stringsAsFactors=FALSE)
event_type_train <- event_type[event_type$id %in% train$id,]
View(event_type_train)
event_type_train <- aggregate(event_type_train[-1],by=list(event_type_train$id),c)
View(event_type_train)
log_feature <- read.csv("log_feature.csv", stringsAsFactors=FALSE)
log_feature_train <- log_feature[log_feature$id %in% train$id,]
train <- read.csv("train.csv", stringsAsFactors=FALSE)
test <- read.csv("test.csv", stringsAsFactors=FALSE)
severity_type <- read.csv("severity_type.csv", stringsAsFactors=FALSE)
severity_type_train <- severity_type[severity_type$id %in% train$id,]
resource_type <- read.csv("resource_type.csv", stringsAsFactors=FALSE)
resource_type_train <- resource_type[resource_type$id %in% train$id,]
resource_type_train <- aggregate(resource_type_train[-1],by=list(resource_type_train$id),c)
event_type <- read.csv("event_type.csv", stringsAsFactors=FALSE)
event_type_train <- event_type[event_type$id %in% train$id,]
event_type_train <- aggregate(event_type_train[-1],by=list(event_type_train$id),c)
log_feature <- read.csv("log_feature.csv", stringsAsFactors=FALSE)
log_feature_train <- log_feature[log_feature$id %in% train$id,]
log_feature_train <- aggregate(log_feature_train[-1],by=list(log_feature_train$id),c)
sample_submission <- read.csv("sample_submission.csv")
all_df <- list(train, severity_type, resource_type, event_type, log_feature)
dat <- all_df[[1]]
for(i in 2:length(all_df)) {
dat <- merge(dat, all_df[[i]], by="id")
}
View(train)
View(event_type_train)
colnames(event_type_train) = c("id", "event_types")
View(event_type_train)
train <- read.csv("train.csv", stringsAsFactors=FALSE)
test <- read.csv("test.csv", stringsAsFactors=FALSE)
severity_type <- read.csv("severity_type.csv", stringsAsFactors=FALSE)
severity_type_train <- severity_type[severity_type$id %in% train$id,]
resource_type <- read.csv("resource_type.csv", stringsAsFactors=FALSE)
resource_type_train <- resource_type[resource_type$id %in% train$id,]
resource_type_train <- aggregate(resource_type_train[-1],by=list(resource_type_train$id),c)
colnames(resource_type_train) = c("id", "resource_types")
event_type <- read.csv("event_type.csv", stringsAsFactors=FALSE)
event_type_train <- event_type[event_type$id %in% train$id,]
event_type_train <- aggregate(event_type_train[-1],by=list(event_type_train$id),c)
colnames(event_type_train) = c("id", "event_types")
log_feature <- read.csv("log_feature.csv", stringsAsFactors=FALSE)
log_feature_train <- log_feature[log_feature$id %in% train$id,]
log_feature_train <- aggregate(log_feature_train[-1],by=list(log_feature_train$id),c)
colnames(log_feature_train) = c("id", "log_features")
sample_submission <- read.csv("sample_submission.csv")
all_df <- list(train, severity_type_train, resource_type_train, event_type_train, log_feature_train)
dat <- all_df[[1]]
for(i in 2:length(all_df)) {
dat <- merge(dat, all_df[[i]], by="id")
}
View(dat)
length(all_df)
View(log_feature_train)
View(log_feature_train)
View(log_feature)
View(log_feature)
colnames(log_feature_train) = c("id", "log_features", "volumes")
all_df <- list(train, severity_type_train, resource_type_train, event_type_train, log_feature_train)
dat <- all_df[[1]]
for(i in 2:length(all_df)) {
dat <- merge(dat, all_df[[i]], by="id")
}
View(dat)
dat[dat$id==6852,]
dat[dat$id=6852,]
dat[dat$id==6852,]
dat[dat$id==6852,]
dat
View(dat)
str(dat)
log_feature_train <- log_feature[log_feature$id %in% train$id,]
View(log_feature_train)
dat[dat$id==2588,]
View(train)
View(log_feature)
View(event_type)
MyMerge <- function(x, y){
y_train <- y[y$id %in% x$id,]
y_train <- aggregate(y_train[-1],by=list(y$id),c)
colnames(y_train) <- c("id")
df <- merge(x, y_train, by= "id")
return(df)
}
df <- Reduce(MyMerge, list(train, severity_type, resource_type, event_type, log_feature))
mergeDF <- function(x, y){
y_train <- y[y$id %in% x$id,]
y_train <- aggregate(y_train[-1], by=list(y$id), c)
colnames(y_train) <- c("id")
df <- merge(x, y_train, by= "id")
return(df)
}
mergeDF(train, severity_type)
mergeDF <- function(x, y){
y_train <- y[y$id %in% x$id,]
y_train <- aggregate(y_train[-1], by=list(y_train$id), c)
colnames(y_train) <- c("id")
df <- merge(x, y_train, by= "id")
return(df)
}
mergeDF(train, severity_type)
mergeDF <- function(x, y){
y_train <- y[y$id %in% x$id,]
y_train <- aggregate(y_train[-1], by=list(y_train$id), c)
colnames(y_train) <- c("id")
df <- merge(x, y_train, by= "id")
return(df)
}
df <- Reduce(mergeDF, list(train, severity_type, resource_type, event_type, log_feature))
View(df)
colnames(df) <- c("id", "location", "fault_severity", "severity_types", "resource_types", "event_type", "log_features", "volumes")
View(df)
source('~/admin/freelance/kaggle/telstra/telstra.R')
# Telstra Kaggle competition
#load data
train <- read.csv("train.csv", stringsAsFactors=FALSE)
test <- read.csv("test.csv", stringsAsFactors=FALSE)
severity_type <- read.csv("severity_type.csv", stringsAsFactors=FALSE)
resource_type <- read.csv("resource_type.csv", stringsAsFactors=FALSE)
event_type <- read.csv("event_type.csv", stringsAsFactors=FALSE)
log_feature <- read.csv("log_feature.csv", stringsAsFactors=FALSE)
sample_submission <- read.csv("sample_submission.csv", stringsAsFactors=FALSE)
# merge data to 1 dataframe
mergeDF <- function(x, y){
y_train <- y[y$id %in% x$id,]
y_train <- aggregate(y_train[-1], by=list(y_train$id), c)
colnames(y_train) <- c("id")
df <- merge(x, y_train, by= "id")
return(df)
}
df <- Reduce(mergeDF, list(train, severity_type, resource_type, event_type, log_feature))
colnames(df) <- c("id", "location", "fault_severity", "severity_type", "resource_types", "event_type", "log_features", "volumes")
View(df)
str(df)
str(df$resource_types)
class(df$resource_types)
library(ggplot2)
ggplot(data = df) + geom_histogram(aes(x=severity_type, y=freq))
ggplot(data = df) + geom_histogram(aes(x=severity_type))
ggplot(data = df) + geom_histogram(aes(x=fault_severity))
